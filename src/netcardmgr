#!/usr/local/bin/python
#
# Copyright (c) 2013-2014, GhostBSD All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
# 1. Redistribution's of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# 2. Redistribution's in binary form must reproduce the above
#    copyright notice,this list of conditions and the following
#    disclaimer in the documentation and/or other materials provided
#    with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
# COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES(INCLUDING,
# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
# ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
# $Id: netcardmgr.py v 0.1 Saturday, February 08 2014 Eric Turgeon $

from subprocess import Popen, PIPE, call
import os
ncard = 'ifconfig -l'
nics = Popen(ncard, shell=True, stdout=PIPE, close_fds=True, universal_newlines=True)
netcard = nics.stdout.readlines()
wifis = 'sysctl -in net.wlan.devices'
wifinics = Popen(wifis, shell=True, stdout=PIPE, close_fds=True, universal_newlines=True)
wifiscards = wifinics.stdout.readlines()
rcconf_out = open('/etc/rc.conf', 'r')
rcconf = rcconf_out.readlines()
notnics = ["lo0", "fwe0", "fwip0", "lo1", "plip0", "pfsync0", "pflog0",
           "tun0", "sl0", "faith0", "ppp0", "lo2", "lo3"]


class autoConfigure():

    def __init__(self):
        ifncard = netcard[0].rstrip()
        if ifncard != '':
            for line in netcard[0].split():
                card = line.rstrip()
                if card not in notnics or 'wlan' not in card:
                    if any('ifconfig_%s=' % card in line for line in rcconf):
                        print("Your wired network card is already configured.")
                    else:
                        rc = open('/etc/rc.conf', 'a')
                        rc.writelines('ifconfig_%s="DHCP"\n' % card)
                        rc.close()
                        call('/etc/rc.d/netif restart', shell=True)
                        call('dhclient ' + card, shell=True)
                        print("Your wired network card is configured.")

        ifwifi = wifiscards[0].rstrip()
        if ifwifi != '':
            wlanNum = 0
            for line in netcard[0].split():
                card = line.rstrip()
                if 'wlan' in card:
                    if any('wlan%s' % wlanNum in listed for listed in rcconf):
                        wlanNum += 1
            for card in wifiscards[0].rstrip().split():
                if any('wlans_%s=' % card in listed for listed in rcconf):
                    print("Your wifi network card is already configured.")
                    if os.path.exists('/etc/wpa_supplicant.conf') is False:
                        open('/etc/wpa_supplicant.conf', 'a').close()
                        call('chown root:wheel /etc/wpa_supplicant.conf',
                             shell=True)
                        call('chmod 765 /etc/wpa_supplicant.conf',
                             shell=True)
                    else:
                        call('chown root:wheel /etc/wpa_supplicant.conf',
                             shell=True)
                        call('chmod 765 /etc/wpa_supplicant.conf',
                             shell=True)
                else:
                    rc = open('/etc/rc.conf', 'a')
                    rc.writelines('wlans_%s="wlan%s"\n' % (card, wlanNum))
                    rc.writelines('ifconfig_wlan%s="WPA DHCP"\n' % wlanNum)
                    rc.close()
                    call('/etc/rc.d/netif restart', shell=True)
                    call('/etc/rc.d/netif restart wlan%s' % wlanNum,
                         shell=True)
                    call('dhclient wlan%s' % wlanNum, shell=True)
                    open('/etc/wpa_supplicant.conf', 'a').close()
                    call('chown root:wheel /etc/wpa_supplicant.conf',
                         shell=True)
                    call('chmod 765 /etc/wpa_supplicant.conf', shell=True)
                    call('ifconfig wlan%s up' % wlanNum, shell=True)
                wlanNum += 1

autoConfigure()
